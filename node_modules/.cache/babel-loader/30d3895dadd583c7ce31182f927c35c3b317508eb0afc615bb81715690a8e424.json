{"ast":null,"code":"import _slicedToArray from\"/Users/samlee/Documents/GitHub/optimalboba/optimalboba/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BobaForm=function BobaForm(_ref){var handleFormSubmit=_ref.handleFormSubmit;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),location=_useState4[0],setLocation=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),rating=_useState6[0],setRating=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),type=_useState8[0],setType=_useState8[1];var handleSubmit=function handleSubmit(e){e.preventDefault();var newBobaPlace={name:name,location:location,rating:rating,type:type};handleFormSubmit(newBobaPlace);setName('');setLocation('');setRating(0);setType('');};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add a new boba place\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Location:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:location,onChange:function onChange(e){return setLocation(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Rating:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:rating,onChange:function onChange(e){return setRating(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Type:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:type,onChange:function onChange(e){return setType(e.target.value);}})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add\"})]});};export default BobaForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","BobaForm","_ref","handleFormSubmit","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","location","setLocation","_useState5","_useState6","rating","setRating","_useState7","_useState8","type","setType","handleSubmit","e","preventDefault","newBobaPlace","onSubmit","children","value","onChange","target"],"sources":["/Users/samlee/Documents/GitHub/optimalboba/optimalboba/src/BobaForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst BobaForm = ({ handleFormSubmit }) => {\n  const [name, setName] = useState('');\n  const [location, setLocation] = useState('');\n  const [rating, setRating] = useState(0);\n  const [type, setType] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newBobaPlace = { name, location, rating, type };\n    handleFormSubmit(newBobaPlace);\n    setName('');\n    setLocation('');\n    setRating(0);\n    setType('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add a new boba place</h2>\n      <label>\n        Name:\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Location:\n        <input type=\"text\" value={location} onChange={(e) => setLocation(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Rating:\n        <input type=\"number\" value={rating} onChange={(e) => setRating(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Type:\n        <input type=\"text\" value={type} onChange={(e) => setType(e.target.value)} />\n      </label>\n      <br />\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default BobaForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}