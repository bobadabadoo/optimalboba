{"ast":null,"code":"var _jsxFileName = \"/Users/samlee/Documents/GitHub/optimalboba/optimalboba/src/Counter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Counter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = _ref => {\n  _s();\n  let {\n    count\n  } = _ref;\n  const [previousCount, setPreviousCount] = useState(count);\n  useEffect(() => {\n    setPreviousCount(count);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flap flap-previous ${count > previousCount ? \"flap-up\" : \"flap-down\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: previousCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flap flap-current ${count > previousCount ? \"flap-down\" : \"flap-up\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"FScjpBjHaUkAFPWIF+EDtjiCFhs=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Counter","_ref","_s","count","previousCount","setPreviousCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samlee/Documents/GitHub/optimalboba/optimalboba/src/Counter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Counter.css\";\n\nconst Counter = ({ count }) => {\n  const [previousCount, setPreviousCount] = useState(count);\n\n  useEffect(() => {\n    setPreviousCount(count);\n  }, [count]);\n\n  return (\n    <div className=\"counter-container\">\n      <div className={`flap flap-previous ${count > previousCount ? \"flap-up\" : \"flap-down\"}`}>\n        <span>{previousCount}</span>\n      </div>\n      <div className={`flap flap-current ${count > previousCount ? \"flap-down\" : \"flap-up\"}`}>\n        <span>{count}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACxB,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAACO,KAAK,CAAC;EAEzDN,SAAS,CAAC,MAAM;IACdQ,gBAAgB,CAACF,KAAK,CAAC;EACzB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEJ,OAAA;IAAKO,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCR,OAAA;MAAKO,SAAS,EAAG,sBAAqBH,KAAK,GAAGC,aAAa,GAAG,SAAS,GAAG,WAAY,EAAE;MAAAG,QAAA,eACtFR,OAAA;QAAAQ,QAAA,EAAOH;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAQ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxB,eACNZ,OAAA;MAAKO,SAAS,EAAG,qBAAoBH,KAAK,GAAGC,aAAa,GAAG,WAAW,GAAG,SAAU,EAAE;MAAAG,QAAA,eACrFR,OAAA;QAAAQ,QAAA,EAAOJ;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAQ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACT,EAAA,CAjBIF,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAmBb,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}