{"ast":null,"code":"var _jsxFileName = \"/Users/samlee/Documents/GitHub/optimalboba/optimalboba/src/Counter.js\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.animateCount = () => {\n      const {\n        end,\n        duration\n      } = this.props;\n      let startTimestamp = null;\n      const step = timestamp => {\n        if (!startTimestamp) startTimestamp = timestamp;\n        const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n        const currentCount = Math.floor(progress * (end - this.state.prevCount) + this.state.prevCount);\n        this.setState({\n          count: currentCount\n        });\n        if (progress < 1) {\n          window.requestAnimationFrame(step);\n        }\n      };\n      window.requestAnimationFrame(step);\n    };\n    this.state = {\n      count: props.start,\n      prevCount: props.start\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.end !== this.props.end) {\n      this.setState({\n        prevCount: this.state.count\n      }, () => {\n        this.animateCount();\n      });\n    }\n  }\n  render() {\n    const {\n      count\n    } = this.state;\n    const countDigits = count ? count.toString().split('') : 0;\n    const prevCountDigits = this.state.prevCount ? this.state.prevCount.toString().split('') : 0;\n    const digitElems = countDigits.map((digit, index) => {\n      const prevDigit = prevCountDigits[index] || ' ';\n      const className = digit === prevDigit ? 'flap' : 'flap flap-anim';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"digit\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"digit-top\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: className,\n            children: prevDigit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"digit-bottom\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: className,\n            children: digit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Counter\",\n      children: digitElems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default Counter;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Counter","constructor","props","animateCount","end","duration","startTimestamp","step","timestamp","progress","Math","min","currentCount","floor","state","prevCount","setState","count","window","requestAnimationFrame","start","componentDidUpdate","prevProps","render","countDigits","toString","split","prevCountDigits","digitElems","map","digit","index","prevDigit","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/samlee/Documents/GitHub/optimalboba/optimalboba/src/Counter.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './Counter.css';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      count: props.start,\n      prevCount: props.start,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.end !== this.props.end) {\n      this.setState({ prevCount: this.state.count }, () => {\n        this.animateCount();\n      });\n    }\n  }\n\n  animateCount = () => {\n    const { end, duration } = this.props;\n    let startTimestamp = null;\n    const step = (timestamp) => {\n      if (!startTimestamp) startTimestamp = timestamp;\n      const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n      const currentCount = Math.floor(progress * (end - this.state.prevCount) + this.state.prevCount);\n      this.setState({ count: currentCount });\n      if (progress < 1) {\n        window.requestAnimationFrame(step);\n      }\n    };\n    window.requestAnimationFrame(step);\n  };\n\n  render() {\n    const { count } = this.state;\n    const countDigits = count ? count.toString().split(''):0;\n    const prevCountDigits = this.state.prevCount ? this.state.prevCount.toString().split(''):0;\n    const digitElems = countDigits.map((digit, index) => {\n      const prevDigit = prevCountDigits[index] || ' ';\n      const className = digit === prevDigit ? 'flap' : 'flap flap-anim';\n      return (\n        <div className=\"digit\" key={index}>\n          <div className=\"digit-top\">\n            <span className={className}>{prevDigit}</span>\n          </div>\n          <div className=\"digit-bottom\">\n            <span className={className}>{digit}</span>\n          </div>\n        </div>\n      );\n    });\n    return <div className=\"Counter\">{digitElems}</div>;\n  }\n}\n\nexport default Counter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}